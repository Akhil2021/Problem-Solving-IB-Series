public class Solution {
    public int pow(long a,long b)
    {
        int mod=(int)1e9+7;
        long res=1;
        while(b>0)
        {
            if((b&1)==1)
            {
                res = (((long)res)*a)%mod;
            }
            b = b>>1;
            a = (a*a)%mod;
        }
        return (int)res;
    }
    public int solve(int A, int[] B) {
        int tovisit = A - B.length;
        int mod = (int)1e9+7;
        long[] fact = new long[1000];
        fact[0] = 1;
        for(int i=1;i<1000;i++)
            fact[i] = (fact[i-1]*i)%mod;
        long res=1;
        for(int i=1;i<=tovisit;i++)
            res = (res*i)%mod;
        Arrays.sort(B);
        int city = 1;
        int n = B.length;
        for(int i=0;i<n;i++)
        {
            if(city!=B[i])
            {
                int no= B[i]-city;
                res = (res*pow(fact[no],mod-2)+mod)%mod;
                if(i!=0&&no>0)
                    res = (res*pow(2,no-1))%mod;
            }
            city = B[i]+1;
        }
        int rem = A+1-city;
        res = (res*pow(fact[rem],mod-2)+mod)%mod;
        return (int)res;
    }
}